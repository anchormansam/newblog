{"version":3,"sources":["../node_modules/compass-mixins/lib/compass/reset/_utilities.scss","index.scss","../node_modules/compass-mixins/lib/compass/css3/_transition.scss","../node_modules/compass-mixins/lib/compass/css3/_images.scss","../node_modules/compass-mixins/lib/compass/functions/_cross_browser_support.scss","NavBar.scss","InfoCards.scss","HomeView.scss","BlogMenu.scss"],"names":[],"mappings":"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","file":"main.67fb619e.chunk.css","sourcesContent":["// Based on [Eric Meyer's reset 2.0](http://meyerweb.com/eric/tools/css/reset/index.html)\n// Global reset rules.\n// For more specific resets, use the reset mixins provided below\n@mixin global-reset {\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    @include reset-box-model;\n    @include reset-font; }\n  // Unlike Eric's original reset, we reset the html element to be compatible\n  // with the vertical rhythm mixins.\n  html {\n    @include reset-body; }\n  ol, ul {\n    @include reset-list-style; }\n  table {\n    @include reset-table; }\n  caption, th, td {\n    @include reset-table-cell; }\n  q, blockquote {\n    @include reset-quotation; }\n  a img {\n    @include reset-image-anchor-border; }\n  @include reset-html5; }\n\n// Reset all elements within some selector scope. To reset the selector itself,\n// mixin the appropriate reset mixin for that element type as well. This could be\n// useful if you want to style a part of your page in a dramatically different way.\n@mixin nested-reset {\n  div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    @include reset-box-model;\n    @include reset-font; }\n  table {\n    @include reset-table; }\n  caption, th, td {\n    @include reset-table-cell; }\n  q, blockquote {\n    @include reset-quotation; }\n  a img {\n    @include reset-image-anchor-border; } }\n\n// Reset the box model measurements.\n@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0; }\n\n// Reset the font and vertical alignment.\n@mixin reset-font {\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\n// Resets the outline when focus.\n// For accessibility you need to apply some styling in its place.\n@mixin reset-focus {\n  outline: 0; }\n\n// Reset a body element.\n@mixin reset-body {\n  line-height: 1; }\n\n// Reset the list style of an element.\n@mixin reset-list-style {\n  list-style: none; }\n\n// Reset a table\n@mixin reset-table {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n// Reset a table cell (`th`, `td`)\n@mixin reset-table-cell {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle; }\n\n// Reset a quotation (`q`, `blockquote`)\n@mixin reset-quotation {\n  quotes: none;\n  &:before, &:after {\n    content: \"\"; \n    content: none; } }\n\n// Resets the border.\n@mixin reset-image-anchor-border {\n  border: none; }\n\n// Unrecognized elements are displayed inline.\n// This reset provides a basic reset for block html5 elements\n// so they are rendered correctly in browsers that don't recognize them\n// and reset in browsers that have default styles for them.\n@mixin reset-html5 {\n  #{elements-of-type(html5-block)} {\n    display: block; } }\n\n// Resets the display of inline and block elements to their default display\n// according to their tag type. Elements that have a default display that varies across\n// versions of html or browser are not handled here, but this covers the 90% use case.\n// Usage Example:\n//\n//     // Turn off the display for both of these classes\n//     .unregistered-only, .registered-only\n//       display: none\n//     // Now turn only one of them back on depending on some other context.\n//     body.registered\n//       +reset-display(\".registered-only\")\n//     body.unregistered\n//       +reset-display(\".unregistered-only\")\n@mixin reset-display($selector: \"\", $important: false) {\n  #{append-selector(elements-of-type(\"inline\"), $selector)} {\n    @if $important {\n      display: inline !important; }\n    @else {\n      display: inline; } }\n  #{append-selector(elements-of-type(\"block\"), $selector)} {\n    @if $important {\n      display: block !important; }\n    @else {\n      display: block; } } }\n","@import \"node_modules/compass-mixins/lib/compass/css3\";\n\n/* Updated version - 24th Nov 2014 */\n\n@import \"node_modules/compass-mixins/lib/compass/reset\";\n\n/* Variables */\n\n$backgroundColor: #f77462;\n$list: #6dc5dd;\n$border: #5ab2ca;\n$geneicons: #fff;\n\n\nbody {\n  height: 100;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml{\n  height:100;\n}\n\n.jumbotron{\n  background: black;\n}\n\nbody {\n  background: $backgroundColor;\n  font-family: Lato, sans-serif;\n}\n\n@font-face {\n  font-family: 'Genericons';\n  src: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/53819/genericons-regular-webfont.eot');\n  src: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/53819/genericons-regular-webfont.woff') format('woff'),\n     url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/53819/genericons-regular-webfont.eot') format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n\n[class*=\"genericon\"] {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  -webkit-font-smoothing: antialiased;\n  font-size: 16px;\n  line-height: 1;\n  font-family: 'Genericons';\n  text-decoration: inherit;\n  font-weight: normal;\n  font-style: normal;\n  vertical-align: top;\n}\n\n/* IE7 */\n[class*=\"genericon\"] {\n  *overflow: auto;\n  *zoom: 1;\n  *display: inline;\n}\n\n.container {\n  margin: 100px auto;\n}\n\n.accordion {\n  background: $border;\n  width: 100%;\n  min-width: 950px;\n  display: block;\n  list-style-type: none;\n  overflow: hidden;\n  height: 200px;\n  font-size: 0;\n}\n\n.tabs {\n  display: inline-block;\n  background-color: $list;\n  border-right: $border 1px solid;\n  width: 80px;\n  height: 200px;\n  overflow: hidden;\n  position: relative;\n  margin: 0;\n  font-size: 16px;\n  @include transition( all 0.4s 0.1s ease-in-out );\n\n  &:hover {\n    width: 450px;\n\n    .social-links {\n      a {\n        &:before {\n          margin-left: -100px;\n        }\n\n        &:after {\n          margin-left: -5px;\n        }\n      }\n    }\n  }\n\n  .paragraph {\n    position: relative;\n    width: 360px;\n    margin-left: 80px;\n    padding: 50px 0 0 10px;\n    height: 200px;\n    background: #fff;\n\n    h1 {\n      font-size: 2.5em;\n      margin-bottom: 10px;\n    } \n\n    p {\n      font-size: 0.88em;\n      line-height: 1.5em;\n      padding-right: 30px;\n    }\n  }\n}\n\n.social-links {\n  display: block;\n\n  a {\n    display: block;\n    text-indent: -9999px;\n    font-size: 0;\n    line-height: 0;\n\n    &:before, &:after {\n      @include transition( all 0.4s 0.1s ease-in-out );\n      width: 80px;\n      height: 200px;\n      position: absolute;\n      text-indent: 0;\n      padding-top: 90px;\n      padding-left: 25px;\n      display: block;\n      font: normal 30px Genericons;\n      color: $geneicons;\n    }\n\n    &:after {\n      font-size: 48px;\n      padding-left: 20px;\n      padding-top: 80px;\n      margin-left: 85px;\n    }\n  }\n}\n\n.twitter-icon {\n  a {\n    &:before, &:after {\n      content: '\\f202';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#7adcf9, #4bc9f5));\n    }\n  }\n}\n\n.facebook-icon {\n  a {\n    &:before, &:after {\n      content: '\\f204';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#548abf, #295b9e));\n    }\n  }\n}\n\n.linkedin-icon {\n  a {\n    &:before, &:after {\n      content: '\\f208';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#00a9cd, #0083b4));\n    }\n  }\n}\n\n.insta-icon {\n  a {\n    &:before, &:after {\n      content: '\\f215';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#7fc121, #298733));\n    }\n  }\n}\n\n.youtube-icon {\n  a {\n    &:before, &:after {\n      content: '\\f213';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#df192a, #c41222));\n    }\n  }\n}\n\n.tumblr-icon {\n  a {\n    &:before, &:after {\n      content: '\\f214';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#283e56, #325372));\n    }\n  }\n}\n\n.dribbble-icon {\n  a {\n    &:before, &:after {\n      content: '\\f201';\n    }\n\n    &:after {\n      @include background-image(linear-gradient(#e03a70, #f189b8));\n    }\n  }\n}\n\n\n","@import \"shared\";\n\n// CSS Transitions\n// Currently only works in Webkit.\n//\n// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3\n// * We'll be prepared.\n//\n// Including this submodule sets following defaults for the mixins:\n//\n//     $default-transition-property : all\n//     $default-transition-duration : 1s\n//     $default-transition-function : false\n//     $default-transition-delay    : false\n//\n// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).\n\n$default-transition-property: all !default;\n\n$default-transition-duration: 1s !default;\n\n$default-transition-function: false !default;\n\n$default-transition-delay: false !default;\n\n$transitionable-prefixed-values: transform, transform-origin !default;\n\n// One or more properties to transition\n//\n// * for multiple, use a comma-delimited list\n// * also accepts \"all\" or \"none\"\n\n@mixin transition-property($property-1: $default-transition-property,\n  $property-2 : false,\n  $property-3 : false,\n  $property-4 : false,\n  $property-5 : false,\n  $property-6 : false,\n  $property-7 : false,\n  $property-8 : false,\n  $property-9 : false,\n  $property-10: false\n) {\n  @if type-of($property-1) == string { $property-1: unquote($property-1); }\n  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);\n  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }\n  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }\n  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }\n                                                          transition-property : $properties;\n}\n\n// One or more durations in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these durations will affect the properties in the same list position\n\n@mixin transition-duration($duration-1: $default-transition-duration,\n  $duration-2 : false,\n  $duration-3 : false,\n  $duration-4 : false,\n  $duration-5 : false,\n  $duration-6 : false,\n  $duration-7 : false,\n  $duration-8 : false,\n  $duration-9 : false,\n  $duration-10: false\n) {\n  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }\n  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);\n  @include experimental(transition-duration, $durations,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more timing functions\n//\n// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]\n// * For multiple, use a comma-delimited list\n// * These functions will effect the properties in the same list position\n\n@mixin transition-timing-function($function-1: $default-transition-function,\n  $function-2 : false,\n  $function-3 : false,\n  $function-4 : false,\n  $function-5 : false,\n  $function-6 : false,\n  $function-7 : false,\n  $function-8 : false,\n  $function-9 : false,\n  $function-10: false\n) {\n  $function-1: unquote($function-1);\n  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);\n  @include experimental(transition-timing-function, $functions,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more transition-delays in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these delays will effect the properties in the same list position\n\n@mixin transition-delay($delay-1: $default-transition-delay,\n  $delay-2 : false,\n  $delay-3 : false,\n  $delay-4 : false,\n  $delay-5 : false,\n  $delay-6 : false,\n  $delay-7 : false,\n  $delay-8 : false,\n  $delay-9 : false,\n  $delay-10: false\n) {\n  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }\n  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);\n  @include experimental(transition-delay, $delays,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// Transition all-in-one shorthand\n\n@mixin single-transition(\n  $property: $default-transition-property,\n  $duration: $default-transition-duration,\n  $function: $default-transition-function,\n  $delay: $default-transition-delay\n) {\n  @include transition(compact($property $duration $function $delay));\n}\n\n@mixin transition(\n  $transition-1 : default,\n  $transition-2 : false,\n  $transition-3 : false,\n  $transition-4 : false,\n  $transition-5 : false,\n  $transition-6 : false,\n  $transition-7 : false,\n  $transition-8 : false,\n  $transition-9 : false,\n  $transition-10: false\n) {\n  @if $transition-1 == default {\n    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);\n  }\n  $transitions: false;\n  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {\n    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);\n  } @else {\n    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n  }\n  $delays: comma-list();\n  $has-delays: false;\n  $webkit-value: comma-list();\n  $moz-value: comma-list();\n  $o-value: comma-list();\n\n  // This block can be made considerably simpler at the point in time that\n  // we no longer need to deal with the differences in how delays are treated.\n  @each $transition in $transitions {\n    // Extract the values from the list\n    // (this would be cleaner if nth took a 3rd argument to provide a default value).\n    $property: nth($transition, 1);\n    $duration: false;\n    $timing-function: false;\n    $delay: false;\n    @if length($transition) > 1 { $duration:        nth($transition, 2); }\n    @if length($transition) > 2 { $timing-function: nth($transition, 3); }\n    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }\n\n    // If a delay is provided without a timing function\n    @if is-time($timing-function) and not($delay) { $delay: $timing-function; $timing-function: false; $has-delays: true; }\n\n    // Keep a list of delays in case one is specified\n    $delays: append($delays, if($delay, $delay, 0s));\n\n    $webkit-value: append($webkit-value, compact((prefixed-for-transition(-webkit, $property) $duration $timing-function)...));\n       $moz-value: append(   $moz-value, compact((prefixed-for-transition(   -moz, $property) $duration $timing-function $delay)...));\n         $o-value: append(     $o-value, compact((prefixed-for-transition(     -o, $property) $duration $timing-function $delay)...));\n  }\n\n  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;\n    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.\n    @if $has-delays                       { -webkit-transition-delay : $delays;       } }\n  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }\n  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }\n                                                          transition : $transitions;\n}\n\n// coerce a list to be comma delimited or make a new, empty comma delimited list.\n@function comma-list($list: ()) {\n  @return join((), $list, comma);\n}\n\n// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.\n@function prefixed-for-transition($prefix, $property) {\n  @if type-of($property) == list {\n    $new-list: comma-list();\n    @each $v in $property {\n      $new-list: append($new-list, prefixed-for-transition($prefix, $v));\n    }\n    @return $new-list;\n  } @else {\n    @if index($transitionable-prefixed-values, $property) {\n      @return #{$prefix}-#{$property};\n    } @else {\n      @return $property;\n    }\n  }\n}\n\n// Checks if the value given is a unit of time.\n@function is-time($value) {\n  @if type-of($value) == number {\n    @return not(not(index(s ms, unit($value))));\n  } @else {\n    @return false;\n  }\n}\n","@import \"shared\";\n@import \"../utilities/general/hacks\";\n@import \"../functions\";\n\n// Background property support for vendor prefixing within values.\n@mixin background(\n  $background-1,\n  $background-2: false,\n  $background-3: false,\n  $background-4: false,\n  $background-5: false,\n  $background-6: false,\n  $background-7: false,\n  $background-8: false,\n  $background-9: false,\n  $background-10: false\n) {\n  $backgrounds: compact($background-1, $background-2, $background-3, $background-4, $background-5,\n                        $background-6, $background-7, $background-8, $background-9, $background-10);\n  $mult-bgs: -compass-list-size($backgrounds) > 1;\n  $add-pie-bg: prefixed(-pie,   $backgrounds) or $mult-bgs;\n  @if $experimental-support-for-svg          and prefixed(-svg,    $backgrounds) {      background:    -svg($backgrounds); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $backgrounds) {      background:    -owg($backgrounds); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $backgrounds) {      background: -webkit($backgrounds); }\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $backgrounds) {      background:    -moz($backgrounds); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $backgrounds) {      background:      -o($backgrounds); }\n  @if $experimental-support-for-pie          and $add-pie-bg                     { -pie-background:    -pie($backgrounds); }\n                                                                                        background:         $backgrounds ;\n}\n\n@mixin background-with-css2-fallback(\n  $background-1,\n  $background-2: false,\n  $background-3: false,\n  $background-4: false,\n  $background-5: false,\n  $background-6: false,\n  $background-7: false,\n  $background-8: false,\n  $background-9: false,\n  $background-10: false\n) {\n  $backgrounds: compact($background-1, $background-2, $background-3, $background-4, $background-5,\n                        $background-6, $background-7, $background-8, $background-9, $background-10);\n  $mult-bgs: -compass-list-size($backgrounds) > 1;\n  $simple-background: if($mult-bgs or prefixed(-css2, $backgrounds), -css2(-compass-nth($backgrounds, last)), false);\n  @if not(blank($simple-background)) { background: $simple-background; }\n  @include background($background-1, $background-2, $background-3, $background-4, $background-5,\n                      $background-6, $background-7, $background-8, $background-9, $background-10);\n}\n\n\n// Background image property support for vendor prefixing within values.\n@mixin background-image(\n  $image-1,\n  $image-2: false,\n  $image-3: false,\n  $image-4: false,\n  $image-5: false,\n  $image-6: false,\n  $image-7: false,\n  $image-8: false,\n  $image-9: false,\n  $image-10: false\n) {\n  $images: compact($image-1, $image-2, $image-3, $image-4, $image-5, $image-6, $image-7, $image-8, $image-9, $image-10);\n  $add-pie-bg: prefixed(-pie,   $images) or -compass-list-size($images) > 1;\n\n  @if $experimental-support-for-svg          and prefixed(-svg,    $images) { background-image:    -svg($images); background-size: 100%; }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $images) { background-image:    -owg($images); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $images) { background-image: -webkit($images); }\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $images) { background-image:    -moz($images); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $images) { background-image:      -o($images); }\n  @if $experimental-support-for-pie          and $add-pie-bg                { @warn \"PIE does not support background-image. Use @include background(#{$images}) instead.\" }\n                                                                              background-image:         $images ;\n}\n\n// Emit a IE-Specific filters that renders a simple linear gradient.\n// For use in IE 6 - 8. Best practice would have you apply this via a\n// conditional IE stylesheet, but if you must, you should place this before\n// any background-image properties that you have specified.\n//\n// For the `$orientation` parameter, you can pass `vertical` or `horizontal`.\n@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {\n  @include has-layout;\n  $gradient-type: if($orientation == vertical, 0, 1);\n  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {\n    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}');\n  }\n}\n\n\n// Border image property support for vendor prefixing properties and values.\n@mixin border-image($value) {\n  @if $experimental-support-for-mozilla      {    -moz-border-image:    -moz(reject(-compass-list($value), fill)); }\n  @if $support-for-original-webkit-gradients { -webkit-border-image:    -owg(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-webkit       { -webkit-border-image: -webkit(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-opera        {      -o-border-image:      -o(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-svg          {         border-image:    -svg(reject(-compass-list($value), fill)); }\n                                                       border-image:                              $value;\n}\n\n// List style image property support for vendor prefixing within values.\n@mixin list-style-image($image) {\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $image) { list-style-image:    -moz($image); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $image) { list-style-image:    -owg($image); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $image) { list-style-image: -webkit($image); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $image) { list-style-image:      -o($image); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $image) { list-style-image:    -svg($image); }\n                                                                             list-style-image:         $image ;\n}\n\n// List style property support for vendor prefixing within values.\n@mixin list-style($value) {\n  $value: -compass-list($value);\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $value) { list-style-image:    -moz($value); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $value) { list-style-image:    -owg($value); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $value) { list-style-image: -webkit($value); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $value) { list-style-image:      -o($value); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $value) { list-style-image:    -svg($value); }\n                                                                             list-style-image:         $value ;\n}\n\n// content property support for vendor prefixing within values.\n@mixin content($value) {\n  $value: -compass-list($value);\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $value) { content:    -moz($value); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $value) { content:    -owg($value); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $value) { content: -webkit($value); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $value) { content:      -o($value); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $value) { content:    -svg($value); }\n                                                                             content:         $value ;\n}\n","// \n// A partial implementation of the Ruby cross browser support functions from Compass:\n// https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/cross_browser_support.rb\n// \n\n@function prefixed($prefix, $property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  $properties: $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9;\n  $prefixed: false;\n  @each $item in $properties {\n    @if type-of($item) == 'string' {\n      $prefixed: $prefixed or str-index($item, 'url') != 1 and str-index($item, 'rgb') != 1 and str-index($item, '#') != 1;\n    } @elseif type-of($item) == 'color' {\n    } @elseif $item != null {\n      $prefixed: true;\n    }\n  }\n  @return $prefixed;\n}\n\n@function prefix($prefix, $property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  $properties: \"\";\n\n  // Support for polymorphism.\n  @if type-of($property1) == 'list' {\n    // Passing a single array of properties.\n    $properties: $property1;\n  } @else {\n    // Passing multiple properties.\n    $properties: $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9;\n  }\n\n  $props: false;\n  @each $item in $properties {\n    @if $item == null {}\n    @else {\n      @if prefixed($prefix, $item) {\n        $item: #{$prefix}-#{$item};\n      }\n      @if $props {\n        $props: $props, $item;\n      }\n      @else {\n        $props: $item;\n      }\n    }\n  }\n  @return $props;\n}\n\n@function -svg($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-svg', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n\n@function -owg($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-owg', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n\n@function -webkit($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-webkit', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n\n@function -moz($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-moz', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n\n@function -o($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-o', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n\n@function -pie($property1, $property2:null, $property3:null, $property4:null, $property5:null, $property6:null, $property7:null, $property8:null, $property9:null) {\n  @return prefix('-pie', $property1, $property2, $property3, $property4, $property5, $property6, $property7, $property8, $property9);\n}\n","#navbarColor {\n  background: black;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n  width: 100%;\n  height: 80px;\n}\n#menuTitle{\n  color: white;\n}\n\n","#Card {\n    border-radius: 50%;\n}",".hero-image {\n  background-image: url(\"/images/titleImage.jpg\");\n  position: relative;\n  background-size: cover;\n  max-width: 100vw;\n  height: 50vw;\n  background-attachment: fixed;\n}\n\n.hero-text {\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-150%, -100%);\n  color: whitesmoke;\n}\n",".sideMenu{\n    transform: translateY(80px);\n}\n\n.menuTitle{\n    width: auto;\n}"]}